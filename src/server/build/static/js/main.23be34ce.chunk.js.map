{"version":3,"sources":["components/ConvertedTextDetails/index.module.css","components/ImageUploadForm/index.js","pages/HomePage.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","components/ConvertedTextDetails/index.js","pages/DetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ImageUploadForm","history","useHistory","useState","uploaded_pic","setUploadedPic","selectedLanguage","setSelectedLanguage","dropdownLanguages","setDropdownLanguages","loadingVisibility","setLoadingVisibility","useEffect","fetch","then","res","json","result","tmp","Object","keys","languages","map","key","push","error","console","log","dropdown","item","Dropdown","Item","eventKey","selectLanguage","event","style","padding","Row","marginTop","Col","Form","Group","controlId","className","Control","onChange","target","files","length","URL","createObjectURL","type","accept","xs","onSelect","Toggle","variant","id","undefined","Menu","maxHeight","overflowY","maxWidth","textAlign","src","Button","onClick","alert","formData","FormData","imageData","document","querySelector","append","name","get","method","body","response","text","join","translated","audio","pathname","state","imageName","textData","translatedData","textToSpeechUrl","catch","position","transform","visibility","color","height","width","HomePage","Helmet","charSet","content","class","display","flexWrap","margin","Nav","styled","nav","NavbarContainer","div","NavLinks","LinkR","MobileIcon","NavMenu","ul","NavItem","li","Navbar","toggle","Provider","value","fontFamily","fontWeight","exact","activeClassName","to","ConvertedTextDetails","setTextToSpeechUrl","setTextData","setTranslatedData","location","useLocation","loadPage","languageArray","top","left","objectFit","marginLeft","Label","fontSize","as","rows","required","border","backgroundColor","readOnly","url","showLanguage","Audio","play","marginBottom","DetailsPage","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23be34ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConvertedTextDetails_container__3r1p-\"};","import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Form, Dropdown } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\n\nconst ImageUploadForm = () => {\n  let history = useHistory();\n  const [uploaded_pic, setUploadedPic] = useState();\n  // eslint-disable-next-line\n  const [selectedLanguage, setSelectedLanguage] = useState();\n  // eslint-disable-next-line\n  // const [isChecked, setChecked] = useState(false);\n  const [imageUrl, setImageUrl] = useState();\n  const [dropdownLanguages, setDropdownLanguages] = useState([]);\n  const [loadingVisibility, setLoadingVisibility] = useState(\"hidden\");\n\n  useEffect(() => {\n    fetch(\"api/text-to-speech/languages\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          var tmp = [];\n          Object.keys(result.languages).map(function (key) {\n            tmp.push(key);\n          });\n\n          setDropdownLanguages(tmp);\n        },\n        (error) => {\n          console.log(\"error: \" + error);\n        }\n      );\n  }, []);\n\n  const dropdown = dropdownLanguages.map((item) => (\n    <Dropdown.Item eventKey={item}>{item}</Dropdown.Item>\n  ));\n\n  const handlePhotoUpload = (event) => {\n    if (event.target.files.length !== 0) {\n      setUploadedPic(URL.createObjectURL(event.target.files[0]));\n    }\n  };\n\n  const selectLanguage = (event) => {\n    setSelectedLanguage(event);\n    console.log(\"selected language is \" + event);\n  };\n\n  // const isSpeechtoText = (event) => {\n  //   console.log(\"isChecked: \" + event.target.checked);\n  //   setChecked(event.target.checked);\n  // };\n\n  const handleSubmit = () => {\n\n    console.log(\"handle submit clicked\");\n\n    // This is where frontend makes request to backend\n    console.log(\"Selected langauge is: \" + selectedLanguage);\n    console.log(\"Image: \" + uploaded_pic);\n\n    if (uploaded_pic === undefined) {\n      alert(\"Please upload a pic\");\n    } else if (selectedLanguage === undefined || selectLanguage === \"\") {\n      alert(\"Please choose a language you wish to convert the text to.\");\n    } else {\n      setLoadingVisibility(\"visible\");\n\n      const formData = new FormData();\n\n      // // Get Image Data\n      const imageData = document.querySelector('#formFile').files[0];\n      formData.append(\"file\", imageData);\n      formData.append(\"filename\", imageData.name);\n      formData.append(\"language\", selectedLanguage);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      console.log(formData);\n      console.log(formData.get(\"file\"));\n\n      fetch(\"/api/uploadImage\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          console.log(response);\n          setLoadingVisibility(\"hidden\");\n          alert(\"Succesfully uploaded image\");\n          console.log(response.text.join(\"\\n\"));\n          console.log(response.translated.join(\"\\n\"));\n          console.log(response.audio);\n\n          history.push({\n            pathname: \"/details\",\n            state: {\n              imageData: uploaded_pic,\n              imageName: imageData.name,\n              selectedLanguage: selectedLanguage,\n              dropdownLanguages: dropdownLanguages,\n              textData: response.text.join(\"\\n\"),\n              translatedData: response.translated.join(\"\\n\"),\n              textToSpeechUrl: response.audio,\n            },\n          });\n        })\n        .catch((error) => {\n          alert(error);\n          console.log(error);\n        });\n    }\n  };\n\n  const showLanguage = () => {\n    let text = \"\";\n\n    if (selectedLanguage !== undefined) {\n      text = selectedLanguage;\n    } else {\n      text = \"Choose Language\";\n    }\n\n    return text;\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <Row>\n        <h1>\n          Upload a photo and get the text translated to your preferred language!\n        </h1>\n      </Row>\n      <Row style={{ marginTop: \"2rem\" }}>\n        <Col>\n          <Form>\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Control\n                onChange={handlePhotoUpload}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n              />\n            </Form.Group>\n          </Form>\n\n          <Row>\n            <Col xs={3}>\n            <h5>\n              Translate to:\n            </h5>\n            </Col>\n            <Col xs={5}>\n              <Dropdown onSelect={selectLanguage}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  {showLanguage()}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu\n                  style={{ maxHeight: \"20rem\", overflowY: \"auto\" }}\n                >\n                  {dropdown}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row style={{ marginTop: \"1rem\" }}>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                {/* <Form.Check\n                  type=\"checkbox\"\n                  onChange={isSpeechtoText}\n                  label=\"Text to speech\"\n                /> */}\n              </Form.Group>\n            </Form>\n          </Row>\n        </Col>\n\n        <Col>\n          <div style={{ maxWidth: \"30rem\" }}>\n            <img\n              style={{\n                maxHeight: \"10rem\",\n                maxWidth: \"30rem\",\n                textAlign: \"center\",\n              }}\n              src={uploaded_pic}\n            />\n          </div>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"2rem\" }}>\n        <Button variant=\"dark\" onClick={handleSubmit}>\n          Convert Image Text\n        </Button>\n      </Row>\n      <div\n        style={{\n          position: \"absolute\",\n          transform: \"translate(450%, -250%)\",\n          visibility: `${loadingVisibility}`,\n        }}\n      >\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUploadForm;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport ImageUploadForm from \"../components/ImageUploadForm\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>PhoText - upload Image</title>\n        <meta\n          name=\"description\"\n          content=\"This website is made for CSC 847 Group 3 Project\"\n        />\n      </Helmet>\n      <div\n        class=\"shadow p-3 mb-5 bg-white rounded\"\n        style={{\n          width: \"80rem\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          margin: \"auto\",\n          marginTop: \"4rem\",\n        }}\n      >\n        <ImageUploadForm />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from \"styled-components\";\nimport { NavLink as LinkR } from \"react-router-dom\";\n\nexport const Nav = styled.nav`\n  background: #fdfdfd;\n  height: 80px;\n  /* margin-top: -80px; */\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  @media screen and (max-width: 960 px) {\n    transition: 0.8s all ease;\n    position: relative;\n  }\n`;\n\nexport const NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80 px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 1px;\n  max-width: 1100px;\n`;\n\nexport const NavLinks = styled(LinkR)`\n  color: #021c35;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  margin-top: 0.55rem;\n  padding: 0 3rem;\n  height: 100%;\n  cursor: pointer;\n  font-size: 1.2rem;\n  &.active {\n    border-bottom: 0.1rem solid #021c35;\n    font-weight: bold;\n  }\n  &:hover {\n    color: #272343;\n    font-weight: bolder;\n  }\n`;\n\nexport const MobileIcon = styled.div`\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate(-50%, 40%);\n  font-size: 1.8rem;\n  cursor: pointer;\n  color: #ffffff;\n`;\n\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -22px;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(LinkR)`\n  border-radius: 50px;\n  background: #01bf71;\n  white-space: nowrap;\n  padding: 10px 22px;\n  color: #010606;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2 easein-out;\n  text-decoration: none;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;\n","import React from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport {\n  Nav,\n  NavbarContainer,\n  MobileIcon,\n  NavMenu,\n  NavItem,\n  NavLinks,\n} from \"./NavbarElements\";\n\nconst Navbar = ({ toggle }) => {\n  return (\n    <IconContext.Provider value={{ color: \"#272343\" }}>\n      <Nav>\n        <NavbarContainer>\n          <MobileIcon>\n            <h1\n              style={{\n                color: \"#27ae60\",\n                fontFamily: \"Mochiy Pop One, sans-serif\",\n                fontWeight: \"bold\",\n              }}\n            >\n              PhoText\n            </h1>\n          </MobileIcon>\n          <NavMenu>\n            <NavItem>\n              <NavLinks exact activeClassName=\"active\" to=\"/\">\n                Upload Image\n              </NavLinks>\n            </NavItem>\n          </NavMenu>\n        </NavbarContainer>\n      </Nav>\n    </IconContext.Provider>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Dropdown, Button } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport { BsMicFill } from \"react-icons/bs\";\nimport Loader from \"react-loader-spinner\";\n\nconst ConvertedTextDetails = () => {\n  const [selectedLanguage, setSelectedLanguage] = useState();\n  const [textToSpeechUrl, setTextToSpeechUrl] = useState();\n  const [textData, setTextData] = useState();\n  const [translatedData, setTranslatedData] = useState();\n  const [buttonColor, setButtonColor] = useState(\"#7f8c8d\");\n  const [loadingVisibility, setLoadingVisibility] = useState(\"hidden\");\n  const location = useLocation();\n\n  //const width = \"40px\";\n\n  useEffect(() => {\n    loadPage()\n  }, [])\n\n\n  let languageArray = [];\n  if (location != undefined) {\n    languageArray = location.state.dropdownLanguages;\n  }\n\n  const selectLanguage = (event) => {\n    setSelectedLanguage(event);\n    console.log(\"selected language is \" + event);\n    setLoadingVisibility(\"visible\");\n\n    const formData = new FormData();\n\n    formData.append(\"language\", event);\n    formData.append(\"filename\", location.state.imageName);\n    formData.append(\"text\", textData);\n\n\n    fetch(\"api/translate\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setTranslatedData(result.translated.join('\\n'));\n          setTextToSpeechUrl(result.url);\n          setLoadingVisibility(\"hidden\");\n        },\n        (error) => {\n          console.log(\"Error: \" + error);\n        }\n      );\n  };\n\n  const loadPage = () => {\n    setTextData(location.state.textData);\n    setTranslatedData(location.state.translatedData);\n    setTextToSpeechUrl(location.state.textToSpeechUrl);\n  }\n\n\n  const showLanguage = () => {\n    let text = \"\";\n\n    if (selectedLanguage !== undefined) {\n      text = selectedLanguage;\n    } else {\n      let language = location.state.selectedLanguage;\n      if (language !== undefined) {\n        text = location.state.selectedLanguage;\n      } else {\n        text = \"Choose Language\";\n      }\n    }\n\n    return text;\n  };\n\n  const dropdown = languageArray.map((item) => (\n    <Dropdown.Item eventKey={item}>{item}</Dropdown.Item>\n  ));\n\n  // const textToSpeech = () => {\n  //   setLoadingVisibility(\"visible\");\n  //   fetch(\"api/text-to-speech/testAudio\")\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         console.log(\"inside text to speech fetch function\");\n  //         setTextToSpeechUrl(result.url);\n  //         console.log(textToSpeechUrl);\n  //         setLoadingVisibility(\"hidden\");\n  //       },\n  //       (error) => {\n  //         console.log(\"error: \" + error);\n  //       }\n  //     );\n  // };\n\n  return (\n    <div>\n      <Row style={{ position: \"relative\" }}>\n        <Col>\n          <div style={{ position: \"relative\", top: \"0\", left: \"0\" }}>\n            <img\n              style={{\n                maxHeight: \"50rem\",\n                maxWidth: \"50rem\",\n                height: \"100%\",\n                width: \"100%\",\n                position: \"relative\",\n                objectFit: \"contain\",\n                top: \"0\",\n                left: \"0\",\n              }}\n              src={location.state.imageData}\n            />\n            {/* <div\n              style={{\n                position: \"absolute\",\n                left: \"300px\",\n                top: \"0px\",\n                zIndex: \"1000\",\n                width: `${width}`,\n                backgroundColor: \"#92AD40\",\n                padding: \"5px\",\n                color: \"white\",\n                fontWeight: \"bold\",\n                opacity: \"0.6\",\n              }}\n            ></div> */}\n          </div>\n        </Col>\n        <Col>\n          <div\n            style={{\n              margin: \"0 auto\",\n              width: \"100%\",\n              textAlign: \"left\",\n              marginLeft: \"7rem\",\n            }}\n          >\n            <Row>\n              <Form.Group>\n                <Form.Label\n                  style={{\n                    color: \"#000000\",\n                    fontSize: \"1rem\",\n                    fontWeight: \"bold\",\n                    marginTop: \"1rem\",\n                  }}\n                >\n                  Vision API Identified Text\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  className=\"input-field\"\n                  style={{\n                    border: \"1px\",\n                    backgroundColor: \"#bdc3c7\",\n                  }}\n                  readOnly\n                  value={textData}\n                />\n              </Form.Group>\n            </Row>\n            <Row style={{ marginTop: \"1rem\" }}>\n              <Col>\n                <Row>\n                  <Col>\n                    <Dropdown onSelect={selectLanguage}>\n                      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {showLanguage()}\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu\n                        style={{ maxHeight: \"15rem\", overflowY: \"auto\" }}\n                      >\n                        {dropdown}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Col>\n                </Row>\n              </Col>\n              <Col>\n                <Row>\n                  <Col>\n                    <Button\n                      style={{\n                        marginLeft: \"2.5rem\",\n                      }}\n                      onClick={() => {\n                        let audio = new Audio(textToSpeechUrl);\n                        audio.play();\n                      }}\n                      variant=\"dark\"\n                    >\n                      Text To Speech\n                      <BsMicFill style={{ marginBottom: \"0.3rem\" }} />\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row style={{ marginTop: \"0rem\" }}>\n              <Form.Group>\n                <Form.Label\n                  style={{\n                    color: \"#000000\",\n                    fontSize: \"1rem\",\n                    fontWeight: \"bold\",\n                    marginTop: \"1rem\",\n                  }}\n                >\n                  Translated Text\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                  className=\"input-field\"\n                  style={{\n                    border: \"1px\",\n                    backgroundColor: \"#2ecc71\",\n                  }}\n                  readOnly\n                  value={translatedData}\n                />\n              </Form.Group>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n      <div\n        style={{\n          position: \"absolute\",\n          transform: \"translate(450%, -250%)\",\n          visibility: `${loadingVisibility}`,\n        }}\n      >\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ConvertedTextDetails;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport ConvertedTextDetails from \"../components/ConvertedTextDetails\";\n\nexport const DetailsPage = () => {\n  return (\n    <div>\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>PhoText - Translated Text</title>\n          <meta\n            name=\"description\"\n            content=\"This website is made for CSC 847 Group 3 Project\"\n          />\n        </Helmet>\n        <div\n          class=\"shadow p-3 mb-5 bg-white rounded\"\n          style={{\n            width: \"80rem\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            margin: \"auto\",\n            marginTop: \"4rem\",\n          }}\n        >\n          <ConvertedTextDetails />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../src/components/Navbar\";\nimport { DetailsPage } from \"./pages/DetailsPage\";\n\nfunction App() {\n  let history = useHistory();\n  return (\n    <Router history={history}>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/details\" exact component={DetailsPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}